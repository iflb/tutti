#!/bin/bash

if [ "$1" = "init" ]; then
    sudo docker-compose build

elif [ "$1" = "start" ]; then
    find projects/.defaultproject -type f -print0 | xargs -0 chmod 644

    if [ -e .host_api.pid ] && [ -n "$(ps -p `cat .host_api.pid` -o pid=)" ]; then
        echo "Tutti is already started."
    else
        python3 host_api.py >> ./logs/host_api.log 2>&1 &
        echo $! > .host_api.pid
    fi

    sudo docker-compose up -d

elif [ "$1" = "stop" ]; then
    sudo docker-compose down
    TUTTI_HOST_PID=`cat .host_api.pid`
    kill -SIGTERM $TUTTI_HOST_PID

elif [ "$1" = "kill" ]; then
    sudo docker-compose kill
    TUTTI_HOST_PID=`cat .host_api.pid`
    kill $TUTTI_HOST_PID

elif [ "$1" = "log" ]; then
    if [ "$2" = "host" ]; then
        less +F -K ./logs/host_api.log
    else
        sudo docker-compose logs --tail="50" -f $2
    fi
else
    echo "
    usage: ./tutti [init|start|stop|kill|log] [container]
    
    init  ... Initialize Tutti environment (i.e., sudo docker-compose build)
    start ... Start containers and host web server
    stop  ... Stop containers and host web server
    kill  ... Kill containers and host web server
    log   ... Monitor output logs of a specified container (Ctrl+C to abort)
    "

fi
