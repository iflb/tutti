

[ducts.server_config]

# True if use ducts behind nginx (<class 'bool'>)
behind_nginx = True

# inet address to bind (<class 'str'>)
# httpd_addr = 0.0.0.0
httpd_addr = 127.0.0.1

# inet port to bind (<class 'int'>)
# httpd_port = 8080

# root directory of all local path (<class 'pathlib.Path'>)
# ducts_home = .

# local path for static root (<class 'pathlib.Path'>)
# local_path_static = htdocs

# module path for html/javascript files (<class 'pathlib.Path'>)
# module_path_libs = libs

# web library file extensions (<class 'list'>)
# web_lib_file_extensions = [".js", ".html", ".css"]

#  (<class 'pathlib.Path'>)
# module_path_jsonp_template = assets/jsonp_template.js

#  (<class 'pathlib.Path'>)
# module_path_favicon = assets/favicon.ico

# URL path for all path (<class 'str'>)
# root_path_ducts = /ducts/

# URL path for static_root (<class 'str'>)
# root_path_static = /static/

#  (<class 'str'>)
# root_path_favicon = /favicon.ico

# URL path for html/javascript files (<class 'str'>)
# relative_path_libs_dir = libs

# where web service discovery is located (<class 'str'>)
# relative_path_web_service_discovery = wsd

# where main web service is located (<class 'str'>)
# relative_path_web_service_main_jsonp = main

# where event descriptions json is located (<class 'str'>)
# relative_path_event_spec = events.json

#  (<class 'str'>)
# relative_path_api = api/v1/

#  (<class 'str'>)
# relative_path_websocket = ws/v1/

#  (<class 'str'>)
# api_path_event = event

#  (<class 'str'>)
# api_path_event_id = event/{event_id}

#  (<class 'str'>)
# jsonp_callback_query = callback

#  (<class 'str'>)
# jsonp_callback_default = callback



[web_service_discovery]

#  (<class 'str'>)
# websocket_host = {ws_host}

#  (<class 'str'>)
# websocket_url = {ws_scheme}://{ws_host}{root_path_websocket}

#  (<class 'str'>)
# api_host = {api_host}

#  (<class 'str'>)
# api_url_root = {api_scheme}://{api_host}{root_path_api}

#  (<class 'str'>)
# api_url_event = {api_scheme}://{api_host}{root_path_api}{api_path_event}



[web_socket_server]

# interval to send ping msg after pong msg received (<class 'int'>)
# ping_pong_interval = 3

