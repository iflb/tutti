version: "3"

services:

  rev-proxy:
    container_name: rev-proxy
    build: 
      context: ./rev-proxy
      args:
        - DOMAIN_NAME=${DOMAIN_NAME}
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./static:/static
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
    env_file:
      - .env
    tty: true
    networks:
      default:
        ipv4_address: ${REV_PROXY_ADDRESS}

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      args:
        - FRONTEND_HOME=${FRONTEND_HOME}
    volumes:
      - ./frontend:${FRONTEND_HOME}
      - ${FRONTEND_HOME}/node_modules/
      - ./projects/:${FRONTEND_HOME}/src/projects/
    stdin_open: true
    tty: true
    env_file:
      - .env
    networks:
      default:
        ipv4_address: ${FRONTEND_ADDRESS}

  backend:
    container_name: backend
    build:
      context: ./backend
      args:
        - BACKEND_HOME=${BACKEND_HOME}
    volumes:
      - ./backend:${BACKEND_HOME}
      - ./projects:${BACKEND_HOME}/projects
    stdin_open: true
    tty: true
    env_file:
      - .env
    networks:
      default:
        ipv4_address: ${BACKEND_ADDRESS}

  redis:
    restart: always
    #image: redislabs/rejson:latest
    image: redis:6-alpine
    container_name: redis
    volumes: 
     - ./redis/data:/data
    #command: redis-server --loadmodule /usr/lib/redis/modules/rejson.so --appendonly yes
    ports:
      - "6379:6379"
    networks:
      default:
        ipv4_address: ${REDIS_ADDRESS}

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
